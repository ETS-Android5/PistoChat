// Generated by view binder compiler. Do not edit!
package com.example.gabble.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gabble.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBotBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView attachButton;

  @NonNull
  public final RecyclerView chatRecylerView;

  @NonNull
  public final View headerBackground;

  @NonNull
  public final AppCompatImageView imageBack;

  @NonNull
  public final EditText inputMessage;

  @NonNull
  public final FrameLayout layoutEmoji;

  @NonNull
  public final FrameLayout layoutSend;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final AppCompatImageView sendButton;

  @NonNull
  public final TextView textAvailability;

  @NonNull
  public final TextView textName;

  @NonNull
  public final View viewBackground;

  @NonNull
  public final View viewSupporter;

  private ActivityBotBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView attachButton, @NonNull RecyclerView chatRecylerView,
      @NonNull View headerBackground, @NonNull AppCompatImageView imageBack,
      @NonNull EditText inputMessage, @NonNull FrameLayout layoutEmoji,
      @NonNull FrameLayout layoutSend, @NonNull ProgressBar progressBar,
      @NonNull AppCompatImageView sendButton, @NonNull TextView textAvailability,
      @NonNull TextView textName, @NonNull View viewBackground, @NonNull View viewSupporter) {
    this.rootView = rootView;
    this.attachButton = attachButton;
    this.chatRecylerView = chatRecylerView;
    this.headerBackground = headerBackground;
    this.imageBack = imageBack;
    this.inputMessage = inputMessage;
    this.layoutEmoji = layoutEmoji;
    this.layoutSend = layoutSend;
    this.progressBar = progressBar;
    this.sendButton = sendButton;
    this.textAvailability = textAvailability;
    this.textName = textName;
    this.viewBackground = viewBackground;
    this.viewSupporter = viewSupporter;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBotBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBotBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bot, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBotBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachButton;
      AppCompatImageView attachButton = ViewBindings.findChildViewById(rootView, id);
      if (attachButton == null) {
        break missingId;
      }

      id = R.id.chatRecylerView;
      RecyclerView chatRecylerView = ViewBindings.findChildViewById(rootView, id);
      if (chatRecylerView == null) {
        break missingId;
      }

      id = R.id.headerBackground;
      View headerBackground = ViewBindings.findChildViewById(rootView, id);
      if (headerBackground == null) {
        break missingId;
      }

      id = R.id.imageBack;
      AppCompatImageView imageBack = ViewBindings.findChildViewById(rootView, id);
      if (imageBack == null) {
        break missingId;
      }

      id = R.id.inputMessage;
      EditText inputMessage = ViewBindings.findChildViewById(rootView, id);
      if (inputMessage == null) {
        break missingId;
      }

      id = R.id.layoutEmoji;
      FrameLayout layoutEmoji = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmoji == null) {
        break missingId;
      }

      id = R.id.layoutSend;
      FrameLayout layoutSend = ViewBindings.findChildViewById(rootView, id);
      if (layoutSend == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.sendButton;
      AppCompatImageView sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.textAvailability;
      TextView textAvailability = ViewBindings.findChildViewById(rootView, id);
      if (textAvailability == null) {
        break missingId;
      }

      id = R.id.textName;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.viewBackground;
      View viewBackground = ViewBindings.findChildViewById(rootView, id);
      if (viewBackground == null) {
        break missingId;
      }

      id = R.id.viewSupporter;
      View viewSupporter = ViewBindings.findChildViewById(rootView, id);
      if (viewSupporter == null) {
        break missingId;
      }

      return new ActivityBotBinding((ConstraintLayout) rootView, attachButton, chatRecylerView,
          headerBackground, imageBack, inputMessage, layoutEmoji, layoutSend, progressBar,
          sendButton, textAvailability, textName, viewBackground, viewSupporter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
