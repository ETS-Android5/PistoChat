// Generated by view binder compiler. Do not edit!
package com.example.gabble.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gabble.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReceiveOtpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText et1;

  @NonNull
  public final EditText et2;

  @NonNull
  public final EditText et3;

  @NonNull
  public final EditText et4;

  @NonNull
  public final EditText et5;

  @NonNull
  public final EditText et6;

  @NonNull
  public final TextView resend;

  @NonNull
  public final Button verify;

  private ActivityReceiveOtpBinding(@NonNull ConstraintLayout rootView, @NonNull EditText et1,
      @NonNull EditText et2, @NonNull EditText et3, @NonNull EditText et4, @NonNull EditText et5,
      @NonNull EditText et6, @NonNull TextView resend, @NonNull Button verify) {
    this.rootView = rootView;
    this.et1 = et1;
    this.et2 = et2;
    this.et3 = et3;
    this.et4 = et4;
    this.et5 = et5;
    this.et6 = et6;
    this.resend = resend;
    this.verify = verify;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReceiveOtpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReceiveOtpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_receive_otp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReceiveOtpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et1;
      EditText et1 = ViewBindings.findChildViewById(rootView, id);
      if (et1 == null) {
        break missingId;
      }

      id = R.id.et2;
      EditText et2 = ViewBindings.findChildViewById(rootView, id);
      if (et2 == null) {
        break missingId;
      }

      id = R.id.et3;
      EditText et3 = ViewBindings.findChildViewById(rootView, id);
      if (et3 == null) {
        break missingId;
      }

      id = R.id.et4;
      EditText et4 = ViewBindings.findChildViewById(rootView, id);
      if (et4 == null) {
        break missingId;
      }

      id = R.id.et5;
      EditText et5 = ViewBindings.findChildViewById(rootView, id);
      if (et5 == null) {
        break missingId;
      }

      id = R.id.et6;
      EditText et6 = ViewBindings.findChildViewById(rootView, id);
      if (et6 == null) {
        break missingId;
      }

      id = R.id.resend;
      TextView resend = ViewBindings.findChildViewById(rootView, id);
      if (resend == null) {
        break missingId;
      }

      id = R.id.verify;
      Button verify = ViewBindings.findChildViewById(rootView, id);
      if (verify == null) {
        break missingId;
      }

      return new ActivityReceiveOtpBinding((ConstraintLayout) rootView, et1, et2, et3, et4, et5,
          et6, resend, verify);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
